---
import { t, changeLanguage } from "i18next";
import { gaps } from "@/consts/style";
// Astro components
import Section 		from "@/components/Core/Section/Section.astro";
// Svelte components
import Drawer 			from "@/components/Common/Drawer/Drawer.svelte";
// Import feature sidebar components
import SolutionLayout from "@/layouts/SolutionLayout.astro";
import SolutionServices from "@/components/Pages/Solutions/Common/SolutionServices.astro";

import db from "@/firebase";
import AboutTechStackMarquee from "@/components/Pages/About/AboutTechStackMarquee.astro";
import SolutionPortfolioCard from "@/components/Pages/Solutions/Common/SolutionPortfolioCard.astro";
import FeaturesGrid from "@/components/Pages/Solutions/FeaturesGrid.astro";
import type { FeatureCard } from "@/types/content";

const lang = "nl";
const key = '3d'
changeLanguage(lang);

const portfolio = await db.custom.filter.by.categoryFromPortfolio(key) || [];
const services = await db.doc.fetch.collection(`solutions/${key}/services`);
const features = await db.doc.fetch.collection(`solutions/${key}/features`);

let featureCards:FeatureCard[] = [];
features.forEach((feature) => {
   featureCards.push({
      id: feature.id,
      title: t(`services:solutions.${key}.features.${feature.id}.title`),
      description: t(`services:solutions.${key}.features.${feature.id}.description`),
      icon: feature.icon
   })
});
---

<SolutionLayout 
	title={`${t(`services:solutions.${key}.title`)}`}
	subtitle={`${t(`services:solutions.${key}.subtitle`)}`}
>
	<!-- FEATURES -->
	<Section name="features">
		<FeaturesGrid featureCards={featureCards} />
	</Section>
	<!-- END FEATURES -->

	<!-- SERVICES -->
	<SolutionServices key={key} services={services} />
	<!-- END SERVICES -->	

	<!-- PORTFOLIO -->
	<Section fullWidthAppend name="portfolio" title={`${t(`services:main.sections.portfolio.title`)}`} subtitle={`${t(`services:main.sections.portfolio.subtitle`)}`}>
			
		<div class={`w-full grid ${gaps} grid-cols-3 grid-rows-[repeat(7,_minmax(0,_1fr))] min-h-[900px]`}>
			{ portfolio.map((item) => (
				<><div class={`
					first-of-type:col-start-1 first-of-type:col-end-2 first-of-type:row-start-2 first-of-type:row-end-5
					nth-2n:col-start-2 nth-2n:col-end-3 nth-2n:row-start-1 nth-2n:row-end-4
					nth-3n:col-start-3 nth-3n:col-end-4 nth-3n:row-start-2 nth-3n:row-end-5
					nth-4n:col-start-1 nth-4n:col-end-2 nth-4n:row-start-5 nth-4n:row-end-[8]
					nth-5n:col-start-2 nth-5n:col-end-3 nth-5n:row-start-4 nth-5n:row-end-7
				`}>
					<Drawer client:idle placement="right">
						<div slot="trigger" class="h-full w-full">
							<SolutionPortfolioCard
								title={item.title}
								image={item.images.card}
								description={item.description[lang]}
								categories={item.categories}
								tags={[]}
							/>
						</div>
						<span slot="title">{item.title}</span>
						{() => {
							return <><div>
								<span>{item.description[lang]}</span>
								
							</div></>
						}}
					</Drawer>
				</div></>
			))}
		</div>
	</Section>
	<!-- END PORTFOLIO -->

	<!-- PRICING -->
	<!-- <Section fullWidthAppend name="web-pricing" title="Transparent Pricing" subtitle="Because we both know that's what's important.">
		Cards here
	</Section> -->
	<!-- END PRICING -->

	<!-- PRICING CALCULATOR -->
	<!-- <Section fullWidthAppend alt name="web-pricing-calculator" title="Estimate your Price" subtitle="Get an estimated price using our price calculation tool!">
		Calculator here
	</Section> -->
	<!-- END PRICING -->
</SolutionLayout>
