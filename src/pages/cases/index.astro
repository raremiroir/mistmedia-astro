---
import { t } from 'i18next'
import { gaps } from '@/consts/style'

// Astro components
import BaseLayout from "@layouts/BaseLayout.astro";
import Page from '@/components/Core/Page/Page.astro';
import Section from '@/components/Core/Section/Section.astro';
import Hero from '@/components/Common/Hero/Hero.astro';
import db from '@/firebase';
import Drawer from '@/components/Common/Drawer/Drawer.svelte';
import SolutionPortfolioCard from '@/components/Pages/Solutions/Common/SolutionPortfolioCard.astro';
import Button from '@/components/Common/Button/Button.svelte';

const lang = "nl";
// export const prerender = true;

const portfolio = await db.doc.fetch.collection('portfolio');
const clients = await db.doc.fetch.collection('clients');
// console.log('portfolio data:', portfolio);
// console.log('clients data:', clients);
---

<BaseLayout title={t('site:pages.cases.title')}>
   <Page>
      <Hero slot="hero" alt title="Cases">
			<span slot="subtitle">
				We're proud to present a growing selection of cases we have worked on in the past.
			</span>
		</Hero>

   <Section name="trixolutions-cases" title="">

      <ul class={`w-full grid grid-cols-2 ${gaps}`}>
         { portfolio.map( (item, key) => (
            item.enabled && (
               <><div class={`col-span-1 `}>
                  <Drawer 
                     client:load 
                     placement={(key % 2 == 0) && (key !== 0)  ? 'right' : 'left'}
                  >
                     <div slot="trigger" class="h-full w-full">
                        <SolutionPortfolioCard 
                           lang={lang} 
                           item={{
                              enabled: item.enabled,
                              id: item.id,
                              title: item.title,
                              description: item.description[lang],
                              slug: item.slug,
                              client: item.client,
                              images: item.images,
                              solution_type: item.solution_type,
                              tags: item.tags,
                           }} />
                     </div>
                     <span slot="title">{item.title}</span>

                     <div class="flex flex-col gap-4">
                        <span>{item.description[lang]}</span>

                        <Button href={item.slug} target="_blank">
                           {t('btn.visit_site')}
                        </Button>
                     </div>
                  </Drawer>
               </div></>
            )
			))}
      </ul>
   </Section>
      
   </Page>
</BaseLayout>