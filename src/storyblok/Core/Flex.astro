---
import { gaps_2 } from "@/consts/style";
import sbWidths from '@/storyblok/data/widths';
import type { SbWidths } from '@/storyblok/data/widths';
import { storyblokEditable } from '@storyblok/astro';
import type { SbBlokData } from '@storyblok/astro';
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
const { blok } = Astro.props;

const direction = blok.direction || 'row';
const directionClass: {
   [key: string]: string
} = {
   row: 'flex-row',
   column: 'flex-col'
}
const justify = blok.justify || 'start';
const justifyClass: {
   [key: string]: string
} = {
   start: 'justify-start',
   center: 'justify-center',
   end: 'justify-end',
   between: 'justify-between',
   around: 'justify-around',
   evenly: 'justify-evenly',
}
const align = blok.align || 'start';
const alignClass: {
   [key: string]: string
} = {
   start: 'items-start',
   center: 'items-center',
   end: 'items-end',
   stretch: 'items-stretch',
   baseline: 'items-baseline',
}


const pickedWidth: SbWidths = blok.width || 'full';

const gaps = blok.gap || gaps_2;
---

<div
   {...storyblokEditable(blok)}
   id={blok.id || undefined}
   class=`
      flex
      ${sbWidths[pickedWidth]}
      ${directionClass[direction]}
      ${justifyClass[justify]}
      ${alignClass[align]}
      ${gaps} ${blok.class || ''}
`>
   {
      blok.slot?.map((blok: SbBlokData) => {
        return <StoryblokComponent blok={blok} />
      })
   }
</div>