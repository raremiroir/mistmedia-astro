---
import { t } from 'i18next';
import { gaps, classes } from "@/consts/style";
// ASTRO COMPONENTS
// SVELTE COMPONENTS
import Card from "@/components/Common/Card/Card.svelte";
import Title from "@/components/Text/Title/Title.svelte";
import db from '@/firebase';
import CaseTags from '../../Cases/CaseTags.svelte';
import type { MistPortfolioItem } from '@/types/content';
import { getDownloadURL } from 'firebase/storage';
import { Picture } from '@astrojs/image/components';
import Button from '@/components/Common/Button/Button.svelte';
import type { DocumentData } from 'firebase/firestore';

export interface Props {
   item: MistPortfolioItem;
   lang: string;
   noBtn?: boolean;
}
const { item, lang, noBtn } = Astro.props;
const { description, enabled, id, images, slug, tags = [], title, solution_type } = item;

const tagsList = await db.doc.fetch.fromRefArray(tags);
const mainImage = images.find((image) => image.isMain) || images[0];
const mainImageRef = await db.storage.fetch.ref({ id: mainImage.id });
const mainImageUrl = await getDownloadURL(mainImageRef);

const clientDoc = await db.doc.fetch.fromRef(item.client);
---

<Card 
   client:load
   class="h-full w-full"
   padding="p-4" gap="gap-4" 
   block hover active article
   media="custom"
   contentClass={`absolute inset-0 w-full h-full z-2 bg-gradient-to-t from-black via-black/70 to-black/30 ${classes.transition.default}`}
   innerContentClass="justify-between"
   mediaClass={`absolute z-0 opacity-80 group-hover:opacity-100 ${classes.transition.default}`}
   innerClass="relative !h-96"
>
   <div slot="media">
      <Picture 
         src={mainImageUrl}
         alt={title}
         widths={[200, 500, 800]}
         sizes="(min-width: 300px;) 200w, (min-width: 600px;) 500w, (min-width: 900;) 800w"
         formats={['webp', 'avif', 'jpeg']}
         aspectRatio={9/16}
         fit="cover" position="center"
         class={`group-hover:blur-sm ${classes.transition.default} w-full h-full object-cover object-center`}
      />
   </div>
   
   <!-- Tags -->
   <div slot="title">
      <CaseTags 
         client:load 
         clientTag={clientDoc?.name}
         solutionTag={solution_type}
         tags={tagsList} 
      /> 
   </div>

   <!-- Content -->
   <div class="">
      <Title h3 size="xs" weight="font-bold" class="uppercase mb-2" color={`text-surface-50/80 group-hover:text-primary/80 ${classes.transition.default}`}>
         <div class="flex items-center justify-start">{title}</div>
      </Title>
      <div class="flex flex-col gap-4">
         <p class={`h-full line-clamp-4 !font-medium text-surface-50/80 group-hover:text-gray-50 ${classes.transition.default}`}>
            {description}
         </p>
         <div class="flex justify-end mb-1">
            {!noBtn && (
               <Button color="primary" variant="soft">
                  {t('common:btn.read_more')}
               </Button>
            )}
         </div>
      </div>
   </div>
</Card>