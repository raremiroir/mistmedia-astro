---
import Card from "@/components/Common/Card/Card.svelte";
import Drawer from "@/components/Common/Drawer/Drawer.svelte";
import Title from "@/components/Text/Title/Title.svelte";
import FeatureModalBase from "./FeatureModalBase.astro";
import Icon 			from "astro-icon";
import Section from "@/components/Core/Section/Section.astro";
import type { FeatureCard } from "@/types/content";

export interface Props {
   featureCards: FeatureCard[];
}
const { featureCards } = Astro.props;
---


<Section name="features">
   <div class="w-full grid grid-cols-3 gap-4 md:gap-4 lg:gap-6 2xl:gap-8">
      {featureCards.map((feature) => (
         <><Drawer client:load>
            <Card 
               padding="p-4" gap="gap-2 md:gap-4"
               slot="trigger" direction="row" 
               centerRow fillHeight noBody 
               block hover active 
               media="icon" icon={feature.icon}
               iconClass="!w-8"
            >
               <div slot="title" class="flex flex-col md:flex-row items-center justify-center md:justify-start gap-2 md:gap-4">
                  <Icon name={feature.icon} class="!w-8" />
                  <Title h3 size="xs" weight="font-bold">
                     <div class="h-full flex items-center justify-center text-center md:text-start md:justify-start">{feature.title}</div>
                  </Title>
               </div>
            </Card>
            
            <span slot="title" class="flex flex-row items-center justify-start gap-2 md:gap-4">
               <Icon name={feature.icon} class="!w-8" />
               {feature.title}
            </span>
            {() => {
               if (!feature.id) return (<></>);
               else return (<><FeatureModalBase content={feature.description}/></>);
            }}
         </Drawer></>
      ))}
   </div>
</Section>