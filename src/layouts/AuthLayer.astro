---
   import LoginForm from "@/components/Pages/Admin/LoginForm.svelte";
   import type { User } from "firebase/auth";
   import Section from "@/components/Core/Section/Section.astro";
   import { dbAuth, userStore } from "@/stores/db";

   dbAuth.onIdTokenChanged(async (newUser: User | null) => {
      const tokenCurrentlySet = Astro.cookies.has("token") ? Astro.cookies.get("token") : undefined;
      const token = newUser ? await newUser.getIdToken() : undefined;
      if (!!newUser && token) {
         localStorage.setItem('token', token)
         userStore.set(newUser);
      }
      // console.log(token);
      if (token && !tokenCurrentlySet) {
         window.location.reload();
      }

   });
   setInterval( async () => {
      if (dbAuth.currentUser) {
         await dbAuth.currentUser.getIdToken(true);
      }
   }, 30 * 60 * 1000) // 30 minutes
---

<script>
   import { userStore } from "@/stores/db";

   const notLoggedInDiv = document.getElementById('not-logged-in');
   const loggedInDiv = document.getElementById('logged-in');
   if (notLoggedInDiv && loggedInDiv) {
      userStore.subscribe((user) => {
         if (user !== null) {
            notLoggedInDiv.classList.add('hidden');
            loggedInDiv.classList.remove('hidden');
            // console.log('logged in');
         } else if (user === null) {
            notLoggedInDiv.classList.remove('hidden');
            loggedInDiv.classList.add('hidden');
            // console.log('not logged in');
         }
      })
   }
</script>



   <div id="logged-in" class="hidden">
      <slot/>
   </div>
   
   <div id="not-logged-in" class="hidden">
      <Section name="login">
         <div class="card variant-soft !bg-initial p-4">
            <LoginForm client:load />
         </div>
      </Section>
   </div>