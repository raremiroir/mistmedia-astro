---
   import LoginForm from "@/components/Pages/Admin/LoginForm.svelte";
   import { user } from "@/stores/auth"; 
   import type { User } from "firebase/auth";
   import Section from "@/components/Core/Section/Section.astro";
   import { dbAuth } from "@/stores/db";

   const auth = dbAuth;
   auth.onIdTokenChanged(async (newUser: User | null) => {
      const tokenCurrentlySet = Astro.cookies.has("token") ? Astro.cookies.get("token") : undefined;
      const token = newUser ? await newUser.getIdToken() : undefined;
      if (!!newUser) {
         Astro.cookies.delete('token');
         Astro.cookies.set( "token", token ?? "", { 
            path: "/",
            maxAge: token ? 60 * 60 * 24 * 7 : 0, // 7 days
            httpOnly: true,
         });
         user.set(newUser);
      }
      // console.log(token);
      if (token && !tokenCurrentlySet) {
         window.location.reload();
      }

   });
   setInterval( async () => {
      if (auth.currentUser) {
         await auth.currentUser.getIdToken(true);
      }
   }, 10 * 60 * 1000) // 10 minutes
---

<script>
   import { user } from "@/stores/auth";

   const notLoggedInDiv = document.getElementById('not-logged-in');
   const loggedInDiv = document.getElementById('logged-in');
   if (loggedInDiv && notLoggedInDiv) {
      user.subscribe((user) => {
         if (user) {
            notLoggedInDiv.classList.add('hidden');
            loggedInDiv.classList.remove('hidden');
            console.log('logged in');
         } else {
            notLoggedInDiv.classList.remove('hidden');
            loggedInDiv.classList.add('hidden');
            console.log('not logged in');
         }
      })
   }
</script>



   <div id="logged-in" class="hidden">
      <slot/>
   </div>
   
   <div id="not-logged-in" class="hidden">
      <Section name="login">
         <div class="card variant-soft !bg-initial p-4">
            <LoginForm client:load />
         </div>
      </Section>
   </div>